using System.ComponentModel;

namespace RMS.Core.Enumerator
{
    /// <summary>
    /// Тип данных для показателя работы.
    /// </summary>
    public enum TypePerformanceIndicator
    {
        /// <summary>
        /// База.
        /// На основе суммы базовых показателей формируется базовая стоимость.
        /// Складываем все значения, проверяем систему НО, наличие первичных документов, наличие работы с банком.
        /// Используется отдельный словарь для стоимости такой операции.
        /// </summary>
        [Description("База")]
        Base = 0,

        /// <summary>
        /// Значение.
        /// Стандартное значение, которое будет использоваться при расчете счета.
        /// Просто берем это значение и складываем с базой.
        /// </summary>
        [Description("Значение")]
        Value = 1,

        /// <summary>
        /// Процент.
        /// Логическое значение указывающее наличие показателя для расчета.
        /// Умножаем базу на данное значение и складываем с базой. 
        /// </summary>
        [Description("Процент")]
        Percent = 2,

        /// <summary>
        /// Количество.
        /// Указывает сколько стоит 1 показатель.
        /// Перемножаем указанное количество на заданную стоимость и складываем с базой. 
        /// </summary>
        [Description("Количество")]
        Count = 3,

        /// <summary>
        /// Выборка.
        /// Указывает сколько стоит 1 показатель.
        /// На основе указанного значения выбираем значение и складываем с базой.
        /// </summary>
        [Description("Выборка")]
        Sample = 4,

        /// <summary>
        /// Банковский счет.
        /// Указывает сколько имеется банковских счетов.
        /// Перемножаем указанное количество на заданную стоимость и складываем с базой. 
        /// Стоимость зависит от того какие операции проводятся -> [Делаем все] или [Выгрузка].
        /// Используется отдельный словарь для стоимости такой операции.
        /// </summary>
        [Description("Банковский счет")]
        Bank = 5,

        /// <summary>
        /// Анализ.
        /// Используется только для анализа.
        /// </summary>
        [Description("Анализ")]
        Analysis = 6
    }
}